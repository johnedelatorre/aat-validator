@tailwind base;
@tailwind components;
@tailwind utilities;

@custom-variant dark (&:is(.dark *));

:root {
  --font-size: 14px;
  --background: #ffffff;
  --foreground: oklch(0.145 0 0);
  --card: #ffffff;
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: #030213;
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(0.95 0.0058 264.53);
  --secondary-foreground: #030213;
  --muted: #ececf0;
  --muted-foreground: #717182;
  --accent: #e9ebef;
  --accent-foreground: #030213;
  --destructive: #d4183d;
  --destructive-foreground: #ffffff;
  --border: #e5e7eb;
  --input: transparent;
  --input-background: #f3f3f5;
  --switch-background: #cbced4;
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --radius: 0.625rem;
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: #030213;
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.145 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.145 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.985 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.396 0.141 25.723);
  --destructive-foreground: oklch(0.637 0.237 25.331);
  --border: oklch(0.269 0 0);
  --input: oklch(0.269 0 0);
  --ring: oklch(0.439 0 0);
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(0.269 0 0);
  --sidebar-ring: oklch(0.439 0 0);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-input-background: var(--input-background);
  --color-switch-background: var(--switch-background);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/**
 * Base typography. This is not applied to elements which have an ancestor with a Tailwind text class.
 */
@layer base {
  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) {
    h1 {
      font-size: var(--text-2xl);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    h2 {
      font-size: var(--text-xl);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    h3 {
      font-size: var(--text-lg);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    h4 {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    p {
      font-size: var(--text-base);
      font-weight: var(--font-weight-normal);
      line-height: 1.5;
    }

    label {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    button {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    input {
      font-size: var(--text-base);
      font-weight: var(--font-weight-normal);
      line-height: 1.5;
    }
  }
}

html {
  font-size: var(--font-size);
}

/* Hide scrollbar for sponsor selector badges */
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Elegant custom scrollbar styling */
@layer components {
  .scrollbar-elegant {
    /* Firefox */
    scrollbar-width: thin;
    scrollbar-color: #6b7280 #f8fafc;
  }

  .scrollbar-elegant::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  .scrollbar-elegant::-webkit-scrollbar-track {
    background: #f8fafc;
    border-radius: 4px;
  }

  .scrollbar-elegant::-webkit-scrollbar-thumb {
    background: #6b7280;
    border-radius: 4px;
    border: 1px solid #f8fafc;
  }

  .scrollbar-elegant::-webkit-scrollbar-thumb:hover {
    background: #4b5563;
  }

  .scrollbar-elegant::-webkit-scrollbar-thumb:active {
    background: #374151;
  }

  .scrollbar-elegant::-webkit-scrollbar-corner {
    background: #f8fafc;
  }
}

/* Dark mode scrollbar styling */
@layer components {
  .dark .scrollbar-elegant {
    /* Firefox */
    scrollbar-color: #9ca3af #1f2937;
  }

  .dark .scrollbar-elegant::-webkit-scrollbar-track {
    background: #1f2937;
  }

  .dark .scrollbar-elegant::-webkit-scrollbar-thumb {
    background: #9ca3af;
    border: 1px solid #1f2937;
  }

  .dark .scrollbar-elegant::-webkit-scrollbar-thumb:hover {
    background: #d1d5db;
  }

  .dark .scrollbar-elegant::-webkit-scrollbar-thumb:active {
    background: #e5e7eb;
  }

  .dark .scrollbar-elegant::-webkit-scrollbar-corner {
    background: #1f2937;
  }
}

/* Custom radio button styling for settings modal */
@layer components {
  .settings-radio-item {
    @apply border-2 border-gray-400 bg-white;
    @apply data-[state=checked]:border-blue-500 data-[state=checked]:bg-blue-500;
    @apply focus:ring-blue-500 focus:ring-2 focus:ring-offset-2;
    @apply hover:border-gray-500 transition-colors;
  }

  .settings-radio-item[data-state="checked"] .settings-radio-indicator {
    @apply text-white;
  }

  .settings-radio-indicator {
    @apply text-blue-500;
  }
}

/* Custom grid utilities for frame layouts */
@layer utilities {
  .grid-cols-15 {
    grid-template-columns: repeat(15, minmax(0, 1fr));
  }
}

/* FIXED SMOOTH ROW TRANSITION ANIMATIONS WITH RESTORE SUPPORT */
@layer components {
  /* Row transition container with smooth opacity and transform changes */
  .row-transition {
    transition: opacity 400ms ease-in-out, transform 400ms ease-in-out, max-height 400ms ease-in-out;
  }

  /* Fade out state - row is being marked as completed */
  .row-fade-out {
    opacity: 0;
    transform: translateY(-4px);
  }

  /* Fade in state - row appears at bottom */
  .row-fade-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Hidden state - row is invisible during position change */
  .row-hidden {
    opacity: 0;
    pointer-events: none;
  }

  /* ENHANCED: Collapsing state with smooth height and content transitions */
  .row-collapsing {
    opacity: 1;
    transform: translateY(0);
    transition: max-height 400ms ease-in-out, padding 300ms ease-in-out;
    overflow: hidden;
  }

  /* FIXED: Restoring state - fading out from bottom before moving to top */
  .row-restoring {
    opacity: 0;
    transform: translateY(4px);
    transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
  }

  /* FIXED: Expanding state - row appearing at top in expanded form */
  .row-expanding {
    opacity: 1;
    transform: translateY(0);
    max-height: 1000px;
    transition: opacity 400ms ease-in-out, transform 400ms ease-in-out, max-height 400ms ease-in-out;
  }

  /* ENHANCED: Smooth height transitions for row collapse with better timing */
  .row-collapse-transition {
    transition: max-height 400ms cubic-bezier(0.4, 0, 0.2, 1), 
                opacity 300ms ease-in-out,
                padding 300ms ease-in-out,
                margin 300ms ease-in-out;
    overflow: hidden;
    will-change: max-height, opacity, padding;
  }

  /* Expanded state for smooth transitions */
  .row-expanded {
    max-height: 1000px; /* Large enough for content */
    transition: max-height 400ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Collapsed state for smooth transitions */
  .row-collapsed {
    max-height: 80px; /* Height of just the header */
    transition: max-height 400ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Completed row visual state */
  .row-completed {
    background-color: rgba(34, 197, 94, 0.05);
    border-left: 3px solid rgb(34, 197, 94);
    transition: background-color 300ms ease-in-out, border-color 300ms ease-in-out;
  }

  /* Transitioning row subtle highlight */
  .row-transitioning {
    background-color: rgba(59, 130, 246, 0.05);
    border-left: 3px solid rgb(59, 130, 246);
    transition: background-color 300ms ease-in-out, border-color 300ms ease-in-out;
  }

  /* FIXED: Restoring row visual state */
  .row-restoring-state {
    background-color: rgba(245, 158, 11, 0.05);
    border-left: 3px solid rgb(245, 158, 11);
    transition: background-color 300ms ease-in-out, border-color 300ms ease-in-out;
  }

  /* ENHANCED: Smooth content fade for collapsing rows */
  .row-content-fade {
    transition: opacity 200ms ease-out, transform 200ms ease-out;
  }

  .row-content-fade.collapsing {
    opacity: 0;
    transform: translateY(-8px);
  }

  /* ENHANCED: Header animation during collapse */
  .row-header-transition {
    transition: padding 300ms ease-in-out, background-color 300ms ease-in-out;
  }

  /* Smooth row reordering animations */
  .row-reorder-animation {
    transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* FIXED: Reverse transition animations for restoration */
  .row-reverse-move {
    transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1);
  }
}

/* FIXED: Dark mode row transition styling with restore support */
@layer components {
  .dark .row-completed {
    background-color: rgba(34, 197, 94, 0.1);
    border-left-color: rgb(74, 222, 128);
  }

  .dark .row-transitioning {
    background-color: rgba(59, 130, 246, 0.1);
    border-left-color: rgb(96, 165, 250);
  }

  .dark .row-collapsing {
    background-color: rgba(34, 197, 94, 0.08);
  }

  .dark .row-restoring-state {
    background-color: rgba(245, 158, 11, 0.1);
    border-left-color: rgb(251, 191, 36);
  }
}

/* FIXED: Animation keyframes for smoother transitions including restore */
@keyframes smoothCollapseIn {
  from {
    opacity: 0;
    max-height: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    max-height: 1000px;
    transform: translateY(0);
  }
}

@keyframes smoothCollapseOut {
  from {
    opacity: 1;
    max-height: 1000px;
    transform: translateY(0);
  }
  to {
    opacity: 0.8;
    max-height: 80px;
    transform: translateY(0);
  }
}

/* FIXED: New keyframes for restoration animation */
@keyframes smoothRestoreOut {
  from {
    opacity: 1;
    max-height: 80px;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    max-height: 0;
    transform: translateY(4px);
  }
}

@keyframes smoothRestoreIn {
  from {
    opacity: 0;
    max-height: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    max-height: 1000px;
    transform: translateY(0);
  }
}

/* Apply keyframe animations to specific transition states */
@layer components {
  .row-animate-collapse-in {
    animation: smoothCollapseIn 400ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .row-animate-collapse-out {
    animation: smoothCollapseOut 400ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  /* FIXED: Restoration animations */
  .row-animate-restore-out {
    animation: smoothRestoreOut 300ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .row-animate-restore-in {
    animation: smoothRestoreIn 400ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
}